#-------------------------------------------------------------------------------
#    http://rainbow.cs.unipi.gr/projects/seduce
#    ShellcodE Detection Using CPU Emulation
#    SEDUCE's agent configuration file
#    Nikos Skalkotos <skalkoto@gmain.com>
#    Dimitris Glynos <glynos@storm.cs.unipi.gr>
#-------------------------------------------------------------------------------

# SENSORS
#
# List of IP:Port tuples of sensors our agent will receive work from.
# Instead of IPv4 addresses, you may use hostnames.
#
# *** There is no default value for this option ***
# (i.e. specify it here explicitly, or as a command line option)
#
# Example:  
# sensors = { "localhost:28002", "193.211.9.4:23000" } 


# PASSWORD
#
# In order for a sensor to serve a UDP request of an agent, the agent needs to
# provide a password the first time it communicates with the sensor. If the
# password is wrong the sensor will ignore any further requests made by this
# specific agent.
#
# *** There is no default value for this option ***
# (i.e. specify it here explicitly, or as a command line option)
#
# Example:
# password = "seduce"


# POLLING_ORDER
#
# When there are multiple sensors to connect to, the POLLING_ORDER
# will determine the next sensor to connect to.
#
# Valid values are
# 0: for Round Robin sensor polling
# 1: for Random sensor polling
#
# Default value = 0
#
# Example:
# polling_order = 1


# TIMEOUT
#
# Since the communication with the sensor is done over an unreliable protocol
# (UDP), a request may not reach its destination.
# The timeout value specifies the number of seconds an agent will wait after an
# answer, having sent a request. A small value on a slow network may cause
# some network traffic overhead and more work for the sensor, since the agent
# this may erroneously that some requests were lost. On the other
# hand a big value may leave the agent idle for a long time when a request or 
# the answer to that request got lost.
# Default value = 5
#
# Example:
# timeout = 5


# RETRIES
#
# When a timeout occures (see above) the agent will retry to send a request.
# The value of this option determines how many times an agent will retry to 
# send a particular request before exiting with a communication error.
# Default value = 5
#
# Example:
# retries = 5


# NO_WORK_WAIT
#
# Using this variable we can set the time in seconds an agent will wait before
# retrying to get new work from a sensor, when no work is available.
# Default value = 5
#
# Example:
# no_work_wait = 5


# MAX_POLLS
#
# When there are more than one sensors to retrieve work from and all sensors
# seem to be idle, this is the maximum number of polls issued before going
# to sleep for NO_WORK_WAIT seconds.
# Default value = 10
#
# Example:
# max_polls = 20


# CHILDREN
#
# Spawn this number of child processes for handling the detection work
# Default value = 1
#
# Example:
# children = 5


###################
# QEMU Parameters #
###################

